/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mazesolver;

import java.util.Scanner;
import java.io.*;
/**
 * Write a description of class MazeSolver here.
 * 
 * @author Nikhil Kanamarla 
 * @version 1.0
 */
public class MazeSolver 
{
    static Node x;
    static Node y;

    static int column;
    static int row;
    static int z;
    static int z2;
    static String storage;
    static String store;
    static String [] [] values;

    public static void main(String args []) {
        try {

            //scanner code that reads in from a file 
            Scanner scan;
            scan = new Scanner(new BufferedReader(new FileReader("maze.txt")));

            row = 1; 
            column = 0;
             z = 0;
             z2 = 0;

            while (scan.hasNextLine()) {
                row++;
                store = scan.nextLine();
            }

            column = store.length();

            scan.close();

            values = new String [column] [row];
            
            Scanner scan2;
            scan2 = new Scanner(new BufferedReader(new FileReader("maze.txt")));
        
            
            while (scan2.hasNext()) {
                for (z = 0; z <= column; z++){
                    values [z] [z2] = scan2.next();

                    System.out.println(values[z][z2]);
                                         
                    for (z2 = 0; z2 <= row; z2++){
                        values [z] [z2] = scan2.next();
                        System.out.println(values[z][z2]);
                                
                    }
                }
                  System.out.println("we here");
            }
      
            
            for(int x = 0; x < row; x++) {
                for(int i = 0; i < column; i++) {

                    storage = storage + values[x] [i];
      
                    if((values[x][i]).equals("@"))  {

                        System.out.println(" the column is " + x + " " +  "the row is " + i);
                        pushcoordinate(x,i);  

                    }

                }
            }

        }catch (Exception e) {
            System.out.println("Error" + e.getMessage());
            e.printStackTrace();
            System.exit(0);
        }
    }

    public static void pushcoordinate(int a, int b) {
        x.push(new Node(a));

        y.push(new Node(b));

        System.out.println(a + ", " + b);

        values [a] [b] = ("#");

        checkup(a,b);
        checkdown(a,b);
        checkleft(a,b);
        checkright(a,b);
        checksolution(a,b);

    }

    public static void checkup(int x, int y) {
        storage = values [x] [y-1];

        if(storage.equals(".")) {
            pushcoordinate(x,y-1);  
        }

    }

    public static void checkdown(int x, int y) {
        storage  = values [x] [y+1];
        if(storage.equals(".")) {
            pushcoordinate(x,y+1);  
        }

    }

    public static void checkleft(int x, int y) {

        storage  = values [x-1] [y];

        if(storage.equals(".")) {
            pushcoordinate(x-1,y);  
        }
    }

    public static void checkright(int x, int y) {

        storage = values [x+1] [y];

        if(storage.equals(".")) {
            pushcoordinate(x+1,y);  
        } else {
            // x.pop();
            //y.pop();
            // come back later
            checkup(x,y);

        }
    }

    public static void checksolution(int a, int b) {

                
        if(storage.equals("$")) {

            while(x.getNext()!= null ){
                while(y.getNext()!= null ){
                    int storage2 = x.getValue();
                    int storage3 = y.getValue();
                    System.out.println(storage2 + "," + storage3);
                    x = x.getNext();
                    y = y.getNext();
                } 
            }

        }
    }
}


